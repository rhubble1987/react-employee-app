{"version":3,"sources":["utils/API.js","components/TableBody.js","components/Table.js","components/Wrapper.js","App.js","index.js"],"names":["axios","get","TableBody","props","console","log","employees","map","employee","name","last","first","email","dob","date","substring","phone","data","nat","login","uuid","Table","state","employeesSortedbyNameAtoZ","isSortedbyNameAtoZ","sortButtonState","americanEmployees","americansFiltered","filterButtonState","API","then","res","setState","results","sort","a","b","nameA","toUpperCase","nameB","filter","catch","err","this","className","onClick","toggleSortingNameAtoZ","toggleFiltering","renderPage","Component","Wrapper","App","ReactDOM","render","document","getElementById"],"mappings":"2QAEe,EACG,WACV,OAAOA,IAAMC,IAAI,6D,cCgCVC,MApBf,SAAmBC,GAEf,OADAC,QAAQC,IAAIF,EAAMG,WAEV,gCACKH,EAAMG,UAAUC,KAAI,SAAAC,GAAQ,OACzB,+BACI,6BAAKA,EAASC,KAAKC,OACnB,6BAAKF,EAASC,KAAKE,QACnB,6BAAKH,EAASI,QACd,6BAAKJ,EAASK,IAAIC,KAAKC,UAAU,EAAE,MACnC,6BAAKP,EAASQ,QACd,8BAzBSC,EAyBoBT,EAASU,IAxB7C,OAATD,EACO,gBACS,OAATA,EACA,YACS,OAATA,EACA,iBACS,OAATA,EACA,SACS,OAATA,EACA,mBADJ,OAUkBT,EAASW,MAAMC,MAnB5C,IAAiCH,QC8FlBI,E,4MA3FZC,MAAQ,CACAhB,UAAW,GACXiB,0BAA2B,GAC3BC,oBAAoB,EACpBC,gBAAiB,+CACjBC,kBAAmB,GACnBC,mBAAmB,EACnBC,kBAAmB,gD,uDAG3B,WAAqB,IAAD,OACnBC,IAAmBC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CACzC1B,UAAWyB,EAAId,KAAKgB,QACpBV,0BAA2B,YAAIQ,EAAId,KAAKgB,SAASC,MAAK,SAASC,EAAEC,GAC7D,IAAIC,EAAQF,EAAE1B,KAAKC,KAAK4B,cACpBC,EAAQH,EAAE3B,KAAKC,KAAK4B,cACxB,OAAID,EAAQE,GACA,EAERF,EAAQE,EACD,EAEA,KAEfb,kBAAmB,YAAIK,EAAId,KAAKgB,SAASO,QAAO,SAAAhC,GAAQ,MAAqB,OAAjBA,EAASU,YAExEuB,OAAM,SAAAC,GAAG,OAAItC,QAAQC,IAAIqC,Q,mCAG9B,YAC0C,IAAlCC,KAAKrB,MAAME,mBACXmB,KAAKX,SAAS,CACVR,oBAAoB,EACpBC,gBAAiB,iDAGrBkB,KAAKX,SAAS,CACVR,oBAAoB,EACpBC,gBAAiB,0C,6BAK7B,YACyC,IAAjCkB,KAAKrB,MAAMK,kBACXgB,KAAKX,SAAS,CACVL,mBAAmB,EACnBC,kBAAmB,iDAGvBe,KAAKX,SAAS,CACVL,mBAAmB,EACnBC,kBAAmB,0C,wBAI3B,WACI,OAAsC,IAAlCe,KAAKrB,MAAME,mBACJ,cAAC,EAAD,CAAWlB,UAAWqC,KAAKrB,MAAMC,6BAEP,IAAjCoB,KAAKrB,MAAMK,kBACJ,cAAC,EAAD,CAAWrB,UAAWqC,KAAKrB,MAAMI,oBAGrC,cAAC,EAAD,CAAWpB,UAAWqC,KAAKrB,MAAMhB,c,oBAI5C,WAAU,IAAD,OACL,OACI,qBAAKsC,UAAU,YAAf,SACA,wBAAOA,UAAU,oBAAjB,UACA,gCACI,+BACI,2CAAa,uBAAK,wBAAQA,UAAWD,KAAKrB,MAAMG,gBAAiBoB,QAAS,kBAAM,EAAKC,yBAAnE,4BAClB,4CACA,uCACA,0CACA,8CACA,yCAAW,uBAAK,wBAAQF,UAAU,sCAAsCC,QAAS,kBAAM,EAAKE,mBAA5E,0CAGnBJ,KAAKK,sB,GAnFFC,aCaLC,E,4MAZX5B,MAAQ,CACJhB,UAAW,I,4CAMf,WACI,OAAO,cAAC,EAAD,CAAOA,UAAWqC,KAAKrB,MAAMhB,gB,GATtB2C,aCIPE,MAJf,WACE,OAAO,cAAC,EAAD,K,MCETC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e18ec2df.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    getEmployees: function() {\n        return axios.get(\"https://randomuser.me/api/?nat=us,au,gb,ca,nz&results=25\");\n    }\n};","import React from \"react\";\n\nfunction convertFromAbbreviation(data) {\n    if (data === 'US') {\n        return \"United States\";\n    } else if (data === 'AU') {\n        return \"Australia\";\n    } else if (data === 'GB') {\n        return \"United Kingdom\";\n    } else if (data === 'CA') {\n        return \"Canada\"\n    } else if (data === 'NZ') {\n        return 'New Zealand'\n    }\n}\n\nfunction TableBody(props) {\n    console.log(props.employees);\n    return (\n            <tbody>\n                {props.employees.map(employee => (\n                    <tr key={employee.login.uuid}>\n                        <td>{employee.name.last}</td>\n                        <td>{employee.name.first}</td>\n                        <td>{employee.email}</td>\n                        <td>{employee.dob.date.substring(0,10)}</td>\n                        <td>{employee.phone}</td>\n                        <td>{convertFromAbbreviation(employee.nat)}</td>\n                    </tr>\n                ))}\n            </tbody>\n    );\n}\n\n\n\nexport default TableBody;\n\n","import React, { Component } from \"react\";\nimport TableBody from \"./TableBody\";\nimport API from \"../utils/API\";\n\nclass Table extends Component {\n   state = {\n           employees: [],\n           employeesSortedbyNameAtoZ: [],\n           isSortedbyNameAtoZ: false,\n           sortButtonState: \"button is-info is-outlined is-small is-light\",\n           americanEmployees: [],\n           americansFiltered: false,\n           filterButtonState: \"button is-info is-outlined is-small is-light\"\n   }\n\n   componentDidMount() {\n    API.getEmployees().then(res => this.setState({ \n        employees: res.data.results,\n        employeesSortedbyNameAtoZ: [...res.data.results].sort(function(a,b) {\n            var nameA = a.name.last.toUpperCase();\n            var nameB = b.name.last.toUpperCase();\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n                return 0;\n            }),\n        americanEmployees: [...res.data.results].filter(employee => employee.nat === \"US\")  \n    }))\n    .catch(err => console.log(err));\n};\n\ntoggleSortingNameAtoZ() {\n    if (this.state.isSortedbyNameAtoZ === true) {\n        this.setState({ \n            isSortedbyNameAtoZ: false ,\n            sortButtonState: \"button is-info is-outlined is-small is-light\"\n        });\n    } else {\n        this.setState({ \n            isSortedbyNameAtoZ: true,\n            sortButtonState: \"button is-info is-outlined is-small\"\n        });\n    }\n}\n\ntoggleFiltering() {\n    if (this.state.americansFiltered === true) {\n        this.setState({\n            americansFiltered: false,\n            filterButtonState: \"button is-info is-outlined is-small is-light\"\n        });\n    } else {\n        this.setState({ \n            americansFiltered: true ,\n            filterButtonState: \"button is-info is-outlined is-small\"\n        });\n    }\n}    \n    renderPage() {\n        if (this.state.isSortedbyNameAtoZ === true) {\n            return <TableBody employees={this.state.employeesSortedbyNameAtoZ} />\n        }\n        if (this.state.americansFiltered === true) {\n            return <TableBody employees={this.state.americanEmployees} />\n        }\n\n        return <TableBody employees={this.state.employees} />\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n            <table className=\"table is-bordered\">\n            <thead>\n                <tr>\n                    <th>Last Name<br/><button className={this.state.sortButtonState} onClick={() => this.toggleSortingNameAtoZ()}>Sort A to Z</button></th>\n                    <th>First Name</th>\n                    <th>Email</th>\n                    <th>Birthday</th>\n                    <th>Phone Number</th>\n                    <th>Country<br/><button className=\"button is-info is-outlined is-small\" onClick={() => this.toggleFiltering()}>Filter for Americans</button></th>\n                </tr>\n            </thead>\n                {this.renderPage()}\n            </table>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Table;","import API from \"../utils/API\";\nimport React, { Component } from \"react\";\nimport Table from \"../components/Table\";\n\nclass Wrapper extends Component {\n    state = {\n        employees: []\n    }\n\n    \n\n    \n    render() {\n        return <Table employees={this.state.employees}/>;\n    }\n}\n\nexport default Wrapper;","import './App.css';\nimport Wrapper from './components/Wrapper';\nimport React from \"react\";\n\nfunction App() {\n  return <Wrapper />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}